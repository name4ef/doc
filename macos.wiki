=== timewarrior: install and integrate with taskwarrior ===
{{{sh
brew install timewarrior
mkdir -p ~/.task/hooks/
cp /usr/local/Cellar/timewarrior/1.2.0/share/doc/timew/ext/on-modify.timewarrior ~/.task/hooks/
chmod +x ~/.task/hooks/on-modify.timewarrior
}}}
----
 - https://timewarrior.net/docs/taskwarrior.html

=== vim + taskwiki ===
{{{sh
brew install vim
export PATH=$PATH:/usr/local/bin/ # add to .~/.zshrc
}}}
==== fix: "ModuleNotFoundError: No module named 'six'" ====
{{{sh
pip3 install six tasklib # pip3.9 may be helpfull
}}}

=== show routes ===
{{{sh
netstat -rlnf inet
}}}

=== forwarding traffic between interfaces ===
/etc/pf.conf:
{{{pf
int_if = "vboxnet0"
ext_if = "en0"
lan_net = "192.168.56.0/24"
ext_addr = "192.168.8.100"

#
# com.apple anchor point
#
scrub-anchor "com.apple/*"
nat on $ext_if from $lan_net to any -> $ext_addr
#nat on $ext_if from $int_if:network to any -> ($ext_if)
#pass out on $ext_if from $lan_net to any nat-to $ext_addr
nat-anchor "com.apple/*"
rdr-anchor "com.apple/*"
dummynet-anchor "com.apple/*"
anchor "com.apple/*"
load anchor "com.apple" from "/etc/pf.anchors/com.apple"
}}}

{{{sh
sysctl net.inet.ip.forwarding=1
pfctl -f /etc/pf.conf -e
}}}

=== format usb flash to ext3 ===
{{{sh
brew install e2fsprogs
diskutil list # get partition name (disk2s1)
diskutil umountDisk disk2
sudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext3 /dev/disk2s1
}}}
----
 - https://apple.stackexchange.com/questions/171506/formatting-usb-disk-as-ext3-on-mac

=== mount ext3 (ro) ===
{{{sh
brew cask install osxfuse
brew install ext4fuse 
sudo ext4fuse /dev/disk2s1 mnt -o allow_other
}}}
----
 - https://hackmylinux.com/2018/02/18/how-to-mount-and-read-a-linux-partition-on-a-mac-ext2-ext3-ext4/

=== write iso image to usb flash ===
{{{sh
diskutil list # get partition name (disk2)
diskutil umountDisk disk2
sudo dd bs=1m if=<PATH TO ISO> of=/dev/disk2
diskutil eject disk2
}}}

=== build Xcode project over commend line ===
{{{sh
# For fix trouble: "xcode-select: error: tool 'xcodebuild' requires Xcode, but 
# active developer directory '/Library/Developer/CommandLineTools' is a command
# line tools instance" run this:
# sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
cd ~/dev/tir/TextXCode7/projects/osx; # Go to project dirrectory
xcodebuild -list -project Test.xcodeproj; # List all information about project
xcodebuild -scheme "Test Debug" build; # Building "Test Debug" scheme
~/Library/Developer/Xcode/DerivedData/Test-fhwmxqkzecgaspckjkghrxesoood/Build/Products/Debug/Test.app/Contents/MacOS/Test
xcodebuild -scheme "Test Debug" SYMROOT=../../build; # Debug build: ../../build/Debug/Test.app
xcodebuild -scheme "Test Release" DSTROOT=../../build archive; # Release build: ../../build/Applications/Test.app
}}}
{{{make
all:
	xcodebuild -project projects/osx/Test.xcodeproj -scheme "Test Debug" SYMROOT=../../build

run:
	./build/Debug/Test.app/Contents/MacOS/Test
}}}
----
 - https://developer.apple.com/library/archive/technotes/tn2339/_index.html#//apple_ref/doc/uid/DTS40014588-CH1-HOW_DO_I_BUILD_MY_PROJECTS_FROM_THE_COMMAND_LINE_
 - https://stackoverflow.com/questions/17980759/xcode-select-active-developer-directory-error

=== Display notification from the Mac command line ===
https://code-maven.com/display-notification-from-the-mac-command-line

=== something like netstat ===
`lsof -nP -iTCP | grep LISTEN`

=== something like ldd ===
`otool -L`

=== running qemu vm ===
{{{sh
brew install qemu

#dd if=/dev/zero of=ubuntu.img bs=1g seek=24 count=0
qemu-img create -f qcow2 ubuntu.qcow2 24G

    #-display curses,show-cursor=on -vga virtio \
    #-cdrom ~/iso/ubuntu-16.04.6-desktop-amd64.iso \
qemu-system-x86_64 \
    -cpu host -enable-kvm -machine accel=hvf \
    -smp 4,sockets=1,cores=2,threads=2 \
    -m 4G \
    -drive file=ubuntu.qcow2,if=virtio \
    -net user,hostfwd=tcp::2222-:22 -net nic \
    -display default,show-cursor=on -vga virtio \
    -usb -device usb-tablet
}}}

=== fixed: qemu-system-x86_64: Error: HV_ERROR ===
{{{sh
cat << EOF > app.entitlements
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>com.apple.security.hypervisor</key>
    <true/>
  </dict>
</plist>
EOF
codesign -s - --entitlements app.entitlements --force $(which qemu-system-x86_64)
}}}
----
- https://www.reddit.com/r/qemu_kvm/comments/kdhmuj/qemu_hvf_support_for_mac_os_x_bug_sur_hv_error/
